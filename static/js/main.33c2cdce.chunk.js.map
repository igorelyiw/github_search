{"version":3,"sources":["components/Timer.tsx","components/Details.tsx","components/Paginator.tsx","components/assets/preloader.svg","components/Preloader.tsx","components/ListContainer.tsx","components/Search.tsx","components/GitHub.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Wrapper","styled","div","Timer","props","seconds","timerKey","onChange","React","useState","state","setState","useEffect","interval","setInterval","clearInterval","Title","h2","Image","img","Content","Details","selectedUser","userDetails","setUserDetails","setSeconds","axios","get","login","then","res","data","id","src","avatar_url","followers","Paginator","current","total","pageSize","Preloader","size","preloader","style","height","CustomList","ul","Icon","ListItem","li","selectedItem","ListContainer","setSelectedUser","searchTerm","users","setUsers","isLoading","setIsLoading","currentPage","setCurrentPage","items","lastUserIndex","firstUsersIndex","currentUsers","slice","map","el","onClick","length","page","Input","input","Button","button","Search","setSearchTerm","value","tempSearch","setTempSearch","placeholder","type","e","currentTarget","ListWrapper","ButtonReset","DetailsWrapper","inititialTerm","GitHub","console","log","document","title","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.33c2cdce.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components';\n\ninterface Props {\n  seconds: number\n  timerKey: number\n  onChange: (seconds: number) => void\n}\nconst Wrapper = styled.div`\ncolor:white;\nfont-weight:700;\nfont-size:24px;\n`;\nconst Timer = (props: Props) => {\n  const { seconds, timerKey, onChange } = props\n  const [state, setState] = React.useState(seconds)\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      setState(state => state - 1)\n    }, 1000);\n    return () => {\n      clearInterval(interval)\n    }\n  }, [timerKey])\n  React.useEffect(() => {\n    setState(seconds)\n  }, [seconds])\n  React.useEffect(() => {\n    onChange(state)\n  }, [state])\n\n  return (\n    <Wrapper>\n      {state}\n    </Wrapper>\n  )\n}\n\nexport default Timer\n","import axios from 'axios'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { SearchUserType, UsersType } from './GitHub'\nimport Timer from './Timer'\n\ninterface Props {\n  selectedUser: SearchUserType\n}\nconst Wrapper = styled.div`\ncolor:white;\ndisplay:flex;\njustify-content:center;\n`;\nconst Title = styled.h2`\ncolor:white;\ntext-align:center;\n`;\nconst Image = styled.img`\nborder-radius:25%;\nheight:350px;\n`;\nconst Content = styled.div`\nmargin-top:16px;\n`;\nexport const initialSeconds = 10;\n\nconst Details = (props: Props) => {\n  const { selectedUser } = props\n  const [userDetails, setUserDetails] = React.useState<null | UsersType>(null)\n  const [seconds, setSeconds] = React.useState(initialSeconds)\n  React.useEffect(() => {\n    if (!!selectedUser) {\n      axios.get<UsersType>(`https://api.github.com/users/${selectedUser.login}`)\n        .then(res => {\n          setSeconds(initialSeconds)\n          setUserDetails(res.data)\n        })\n    }\n  }, [selectedUser])\n\n  React.useEffect(() => {\n    if (seconds < 1) setUserDetails(null)\n  }, [seconds])\n\n  return (\n    <Wrapper >\n      <div>{userDetails && <div>\n        <Timer seconds={seconds} timerKey={userDetails.id} onChange={setSeconds} />\n        <Title>{userDetails.login}</Title>\n        <Image src={userDetails.avatar_url} /><br />\n        <Content>{userDetails.login} <br />  <span>Followers:{userDetails.followers}</span></Content>\n      </div>}\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport { Pagination } from 'antd'\n\ninterface Props {\n  current: number\n  total: number\n  pageSize: number\n  onChange: (num: number) => void\n}\n\nconst Paginator = (props: Props) => {\n  const { current, total, pageSize, onChange } = props\n  return (\n    <>\n      <Pagination current={current} total={total} pageSize={pageSize} onChange={onChange} />\n    </>\n  )\n}\n\nexport default Paginator\n","export default __webpack_public_path__ + \"static/media/preloader.7f23ab91.svg\";","import React from 'react'\nimport preloader from './assets/preloader.svg'\ninterface Props{\n  size:number\n}\nconst Preloader = (props:Props) => {\n  const{size}=props\n  return (\n    <>\n    <img src={preloader} style={{height:size}} />\n    </>\n  )\n}\n\nexport default Preloader\n","import axios from 'axios';\nimport React from 'react'\nimport s from './GitHub.module.css'\n\nimport { SearchResult, SearchUserType } from './GitHub';\nimport styled from 'styled-components';\nimport Paginator from './Paginator';\nimport Preloader from './Preloader';\n\ninterface Props {\n  searchTerm: string\n  selectedUser: string\n  setSelectedUser: (user: string) => void\n}\n\nconst Wrapper = styled.div`\nwidth:400px;\ncolor:white;\nmargin-top:16px;\n`;\nconst CustomList = styled.ul`\nlist-style:none;\nwidth:300px;\nmin-height:300px;\n`;\nconst Icon = styled.img`\nwidth:50px;\nborder-radius:50%;\nmargin-right:16px;\n`;\ninterface IBtn {\n  selectedItem: boolean\n}\nconst ListItem = styled.li<IBtn>`\nmargin-bottom:16px;\npadding-bottom:5px;\nborder-bottom:${(props: any) => props.selectedItem ? '2px solid white' : ''};\n\n`;\nconst ListContainer = (props: any) => {\n  const { selectedUser, setSelectedUser, searchTerm } = props\n  const [users, setUsers] = React.useState<SearchUserType[]>([]);\n  const [isLoading, setIsLoading] = React.useState(false)\n  const [currentPage, setCurrentPage] = React.useState(1)\n  const usersPerPage = 7\n\n  React.useEffect(() => {\n    setIsLoading(true)\n    axios.get<SearchResult>(`https://api.github.com/search/users?q=${searchTerm}`)\n      .then(res => setUsers(res.data.items))\n      .then(res => setIsLoading(false))\n  }, [searchTerm])\n\n  const lastUserIndex = currentPage * usersPerPage\n  const firstUsersIndex = lastUserIndex - usersPerPage\n  let currentUsers = [...users].slice(firstUsersIndex, lastUserIndex)\n  return (\n    <Wrapper>\n      {isLoading ? <Preloader size={100} /> : null}\n      <CustomList>\n        {currentUsers\n          .map(el =>\n            <ListItem key={el.id} selectedItem={selectedUser === el} onClick={() => setSelectedUser(el)}>\n              <Icon src={el.avatar_url} />{el.login}\n            </ListItem>)}\n      </CustomList>\n      <Paginator current={currentPage} total={users.length} pageSize={usersPerPage} onChange={(page) => setCurrentPage(page)} />\n    </Wrapper>\n  )\n}\n\nexport default ListContainer\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  setSearchTerm: (str: string) => void\n  value: string\n}\n\nconst Wrapper = styled.div`\nmax-width:400px;\nmin-width:260px;\n`;\nconst Input = styled.input`\nwidth:50%;\npadding:5px;\noutline:none;\nmargin-right:16px;\nbox-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n`;\nexport const Button = styled.button`\nwidth:100px;\nbackground: linear-gradient(to right, blue, pink);\npadding:5px;\ncolor:white;\nfont-weight:700;\nbox-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n`;\nconst Search = (props: Props) => {\n  const { setSearchTerm, value } = props\n  const [tempSearch, setTempSearch] = React.useState(value)\n  React.useEffect(() => {\n    setTempSearch(value)\n  }, [value])\n  return (\n    <Wrapper>\n      <Input placeholder=\"search\" type=\"text\" value={tempSearch} onChange={(e) => setTempSearch(e.currentTarget.value)} />\n      {tempSearch !== value && <Button onClick={() => setSearchTerm(tempSearch)}>Find</Button>}\n    </Wrapper>\n  )\n}\n\nexport default Search\n","import axios from 'axios'\nimport React from 'react'\nimport styled from 'styled-components'\nimport s from './GitHub.module.css'\n\nimport Details from './Details'\nimport ListContainer from './ListContainer'\nimport Search, { Button } from './Search'\n\nexport type SearchUserType = {\n  login: string\n  id: number\n  avatar_url?: string\n}\nexport type SearchResult = {\n  items: SearchUserType[]\n}\nexport type UsersType = {\n  login: string\n  id: number\n  avatar_url: string\n  followers: number\n}\n\nconst Wrapper = styled.div`\ndisplay:flex;\njustify-content:center;\nbackground-image:url(https://cdn.pizap.com/pizapfiles/images/photo_backgrounds_textures_app04.jpg);\nbackground-repeat:no-repeat;\nbackground-size:cover;\nwidth:100%;\nmin-height:100vh;\npadding:32px;\n`;\nconst ListWrapper = styled.div`\nwidth:30%;\ndisplay:flex;\nflex-direction:column;\n`;\nconst ButtonReset = styled(Button)`\nmargin-top:8px;\n`;\nconst DetailsWrapper = styled.div`\nwidth:30%;\n`;\nconst inititialTerm = \"it-kamasutra\"\nconst GitHub = () => {\n  const [selectedUser, setSelectedUser] = React.useState<SearchUserType | null>(null)\n  const [searchTerm, setSearchTerm] = React.useState(inititialTerm);\n  React.useEffect(() => {\n    console.log('SYNC TAB TITLE');\n    if (!!selectedUser) {\n      document.title = selectedUser.login\n    }\n  }, [selectedUser]);\n\n  return (\n    <Wrapper >\n      <ListWrapper>\n        <Search value={searchTerm} setSearchTerm={(e) => setSearchTerm(e)} />\n        <ButtonReset onClick={() => setSearchTerm(inititialTerm)}>Reset</ButtonReset>\n        <ListContainer\n          selectedUser={selectedUser}\n          setSelectedUser={setSelectedUser}\n          searchTerm={searchTerm}\n        />\n      </ListWrapper>\n      <DetailsWrapper>\n        {selectedUser && <Details selectedUser={selectedUser} />}\n      </DetailsWrapper>\n    </Wrapper>\n  )\n}\n\nexport default GitHub\n","import React from 'react';\nimport './App.css';\nimport GitHub from './components/GitHub';\nimport 'antd/dist/antd.css';\nfunction App() {\n  return (\n    <div >\n      <GitHub />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}